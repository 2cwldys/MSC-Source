{\rtf1\ansi\ansicpg1252\uc1\deff0\stshfdbch0\stshfloch0\stshfhich0\stshfbi0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}{\f210\froman\fcharset238\fprq2 Times New Roman CE;}{\f211\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f213\froman\fcharset161\fprq2 Times New Roman Greek;}
{\f214\froman\fcharset162\fprq2 Times New Roman Tur;}{\f215\froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f216\froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f217\froman\fcharset186\fprq2 Times New Roman Baltic;}
{\f218\froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\f220\fswiss\fcharset238\fprq2 Arial CE;}{\f221\fswiss\fcharset204\fprq2 Arial Cyr;}{\f223\fswiss\fcharset161\fprq2 Arial Greek;}{\f224\fswiss\fcharset162\fprq2 Arial Tur;}
{\f225\fswiss\fcharset177\fprq2 Arial (Hebrew);}{\f226\fswiss\fcharset178\fprq2 Arial (Arabic);}{\f227\fswiss\fcharset186\fprq2 Arial Baltic;}{\f228\fswiss\fcharset163\fprq2 Arial (Vietnamese);}{\f230\fmodern\fcharset238\fprq1 Courier New CE;}
{\f231\fmodern\fcharset204\fprq1 Courier New Cyr;}{\f233\fmodern\fcharset161\fprq1 Courier New Greek;}{\f234\fmodern\fcharset162\fprq1 Courier New Tur;}{\f235\fmodern\fcharset177\fprq1 Courier New (Hebrew);}
{\f236\fmodern\fcharset178\fprq1 Courier New (Arabic);}{\f237\fmodern\fcharset186\fprq1 Courier New Baltic;}{\f238\fmodern\fcharset163\fprq1 Courier New (Vietnamese);}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;
\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;
\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext0 Normal;}{\*\cs10 \additive \ssemihidden 
Default Paragraph Font;}{\*\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\trcbpat1\trcfpat1\tscellwidthfts0\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv 
\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1024\langfe1024\cgrid\langnp1024\langfenp1024 \snext11 \ssemihidden Normal Table;}}{\*\rsidtbl \rsid12848422}{\*\generator Microsoft Word 10.0.2627;}{\info
{\author Thoth Software}{\operator Thoth Software}{\creatim\yr2010\mo6\dy25\hr15\min7}{\revtim\yr2010\mo6\dy25\hr15\min12}{\version2}{\edmins5}{\nofpages2}{\nofwords381}{\nofchars2172}{\*\company RS Graphix}{\nofcharsws2548}{\vern16437}}
\widowctrl\ftnbj\aenddoc\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\horzdoc\dghspace120\dgvspace120\dghorigin1701\dgvorigin1984\dghshow0\dgvshow3\jcompress\viewkind4\viewscale150\nolnhtadjtbl\rsidroot12848422 \fet0\sectd 
\linex0\sectdefaultcl\sftnbj {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl4
\pnlcltr\pnstart1\pnindent720\pnhang {\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}
{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}\pard\plain \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 
\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f1\fs20\insrsid12848422 (All of this is on the client in StudioModelRenderer.cpp)
\par 
\par Changes, plus removed a lot of useless comments (and added some to make it readable)
\par (Match the beginning and end comments)
\par }{\b\f1\fs20\insrsid12848422 [BEGIN]
\par }{\f2\fs20\cf11\insrsid12848422 //Master Sword - Rendering the view model actually means rendering two separate models
\par }{\f2\fs20\insrsid12848422 \tab }{\f2\fs20\cf2\insrsid12848422 if}{\f2\fs20\insrsid12848422 ( FBitSet(m_pCurrentEntity->curstate.oldbuttons, MSRDR_VIEWMODEL ) )
\par \tab \{
\par \tab \tab TotalModels = 0;
\par \tab \tab }{\f2\fs20\cf2\insrsid12848422 bool}{\f2\fs20\insrsid12848422  FoundExclusiveVModel = }{\f2\fs20\cf2\insrsid12848422 false}{\f2\fs20\insrsid12848422 ;
\par \tab \tab foreach( hand, MAX_PLAYER_HANDITEMS )\tab }{\f2\fs20\cf11\insrsid12848422 //Includes playerhands view model
\par }{\f2\fs20\insrsid12848422 \tab \tab \{
\par \tab \tab \tab }{\f2\fs20\cf11\insrsid12848422 //Check if some view model animation requested exclusive rendering (usually because it uses both hands)
\par }{\f2\fs20\insrsid12848422 \tab \tab \tab }{\f2\fs20\cf2\insrsid12848422 if}{\f2\fs20\insrsid12848422 ( ViewModel_ExclusiveViewHand >= 0 && ViewModel_ExclusiveViewHand != hand )
\par \tab \tab \tab \tab }{\f2\fs20\cf2\insrsid12848422 continue}{\f2\fs20\insrsid12848422 ;
\par 
\par \tab \tab \tab }{\f2\fs20\cf2\insrsid12848422 if}{\f2\fs20\insrsid12848422 ( CMirrorMgr::m_CurrentMirror.Enabled )
\par \tab \tab \tab \tab }{\f2\fs20\cf2\insrsid12848422 return}{\f2\fs20\insrsid12848422  0;
\par 
\par \tab \tab \tab }{\f2\fs20\cf11\insrsid12848422 //Check if an item is hend in this hand
\par }{\f2\fs20\insrsid12848422 \tab \tab \tab CGenericItem *pItem = player.Hand( hand );
\par \tab \tab \tab }{\f2\fs20\cf2\insrsid12848422 if}{\f2\fs20\insrsid12848422 ( !pItem ) }{\f2\fs20\cf2\insrsid12848422 continue}{\f2\fs20\insrsid12848422 ;
\par \tab \tab \tab }{\f2\fs20\cf2\insrsid12848422 if}{\f2\fs20\insrsid12848422 ( hand == HAND_PLAYERHANDS && player.ActiveItem() != pItem ) }{\f2\fs20\cf2\insrsid12848422 continue}{\f2\fs20\insrsid12848422 ;\tab }{\f2\fs20\cf11\insrsid12848422 
//For the player hands to be rendered, it must be the active item
\par 
\par }{\f2\fs20\insrsid12848422 \tab \tab \tab }{\f2\fs20\cf11\insrsid12848422 //Check if the viewmodel for this hand is valid
\par }{\f2\fs20\insrsid12848422 \tab \tab \tab }{\f2\fs20\cf2\insrsid12848422 int}{\f2\fs20\insrsid12848422  NUM = pItem->m_ViewModelPart;
\par \tab \tab \tab model_s *pModel = gEngfuncs.CL_LoadModel( pItem->m_ViewModel, &NUM ); }{\f2\fs20\cf11\insrsid12848422 //MiB Apr2008a - ViewModel changing system
\par }{\f2\fs20\insrsid12848422 \tab \tab \tab }{\f2\fs20\cf2\insrsid12848422 if}{\f2\fs20\insrsid12848422 ( !pModel ) }{\f2\fs20\cf2\insrsid12848422 continue}{\f2\fs20\insrsid12848422 ;
\par 
\par \tab \tab \tab }{\f2\fs20\cf2\insrsid12848422 int}{\f2\fs20\insrsid12848422  h = TotalModels;
\par 
\par \tab \tab \tab }{\f2\fs20\cf11\insrsid12848422 //Try to create an entity for this viewmodel (only lasts this frame)
\par }{\f2\fs20\insrsid12848422 \tab \tab \tab cl_entity_t &RenderEnt = MSCLGlobals::CLViewEntities[hand];
\par \tab \tab \tab }{\f2\fs20\cf2\insrsid12848422 int}{\f2\fs20\insrsid12848422  Ent = gEngfuncs.CL_CreateVisibleEntity( ET_NORMAL, &RenderEnt );
\par \tab \tab \tab }{\f2\fs20\cf2\insrsid12848422 if}{\f2\fs20\insrsid12848422 ( !Ent ) }{\f2\fs20\cf2\insrsid12848422 continue}{\f2\fs20\insrsid12848422 ;
\par \tab \tab \tab 
\par \tab \tab \tab }{\f2\fs20\cf2\insrsid12848422 if}{\f2\fs20\insrsid12848422 ( ViewModel_ExclusiveViewHand >= 0 ) FoundExclusiveVModel = }{\f2\fs20\cf2\insrsid12848422 true}{\f2\fs20\insrsid12848422 ;
\par 
\par \tab \tab \tab RenderEnt.model = pModel;
\par \tab \tab \tab studiohdr_t *pStudioHeader = (studiohdr_t *)IEngineStudio.Mod_Extradata( RenderEnt.model );
\par 
\par \tab \tab \tab cl_entity_s *view = gEngfuncs.GetViewModel();
\par \tab \tab \tab view->model = NULL; }{\f2\fs20\cf11\insrsid12848422 //MiB JUN2010_21 - Disable the HL viewmodel. We use our own.
\par 
\par }{\f2\fs20\insrsid12848422 \tab \tab \tab RenderEnt.SetBody( pItem->m_ViewModelPart, pItem->m_ViewModelSubmodel ); }{\f2\fs20\cf11\insrsid12848422 //Set the specified submodel on the item
\par 
\par }{\f2\fs20\insrsid12848422 \tab \tab \tab }{\f2\fs20\cf11\insrsid12848422 //MiB Apr 2008a NOTE:}{\b\f1\fs20\insrsid12848422 
\par [END]}{\f1\fs20\insrsid12848422 
\par 
\par Search "}{\f2\fs20\insrsid12848422 rdrdbg( "Render" );}{\f1\fs20\insrsid12848422 " and replace the "" below it with this:}{\b\f1\fs20\insrsid12848422 
\par [BEGIN]
\par }{\f2\fs20\cf11\insrsid12848422 \tab \tab \tab //MiB JUN2010_21 - Makes the viewmodels not stick into walls
\par }{\f2\fs20\insrsid12848422 \tab \tab \tab }{\f2\fs20\cf2\insrsid12848422 if}{\f2\fs20\insrsid12848422  ( FBitSet( m_pCurrentEntity->curstate.colormap, MSRDR_HANDMODEL ) )
\par \tab \tab \tab \{
\par \tab \tab \tab \tab }{\f2\fs20\cf2\insrsid12848422 float}{\f2\fs20\insrsid12848422  tmp[2];
\par \tab \tab \tab \tab glGetFloatv( GL_DEPTH_RANGE , tmp );
\par \tab \tab \tab \tab glDepthRange (tmp[0], tmp[0] + 0.3*(tmp[1]-tmp[0]));
\par \tab \tab \tab 
\par \tab \tab \tab \tab StudioRenderModel( );
\par \tab \tab \tab \tab glDepthRange ( tmp[0] , tmp[1] );
\par \tab \tab \tab \}
\par \tab \tab \tab }{\f2\fs20\cf2\insrsid12848422 else
\par }{\f2\fs20\insrsid12848422 \tab \tab \tab \tab StudioRenderModel( );}{\b\f1\fs20\insrsid12848422 
\par [END]
\par }{\b\f1\fs20\insrsid12848422 
\par Also fix shuriken's skin line:
\par }\pard \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0\pararsid12848422 {\f1\fs20\insrsid12848422\charrsid12848422 Replace line below:}{\f2\fs20\insrsid12848422  }{\f2\fs20\cf2\insrsid12848422 if}{\f2\fs20\insrsid12848422 ( pItem->m_Skin > 0 ) }{
\f2\fs20\insrsid12848422 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12848422 {\f2\fs20\insrsid12848422 
\par }{\f1\fs20\insrsid12848422\charrsid12848422 with }{\f2\fs20\insrsid12848422 RenderEnt.curstate.skin = pItem->m_Skin;}{\b\f1\fs20\insrsid12848422\charrsid12848422 
\par }}