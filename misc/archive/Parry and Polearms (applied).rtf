{\rtf1\ansi\ansicpg1252\uc1\deff0\stshfdbch0\stshfloch0\stshfhich0\stshfbi0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}{\f36\froman\fcharset238\fprq2 Times New Roman CE;}{\f37\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f39\froman\fcharset161\fprq2 Times New Roman Greek;}
{\f40\froman\fcharset162\fprq2 Times New Roman Tur;}{\f41\froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f42\froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f43\froman\fcharset186\fprq2 Times New Roman Baltic;}
{\f44\froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\f46\fswiss\fcharset238\fprq2 Arial CE;}{\f47\fswiss\fcharset204\fprq2 Arial Cyr;}{\f49\fswiss\fcharset161\fprq2 Arial Greek;}{\f50\fswiss\fcharset162\fprq2 Arial Tur;}
{\f51\fswiss\fcharset177\fprq2 Arial (Hebrew);}{\f52\fswiss\fcharset178\fprq2 Arial (Arabic);}{\f53\fswiss\fcharset186\fprq2 Arial Baltic;}{\f54\fswiss\fcharset163\fprq2 Arial (Vietnamese);}{\f56\fmodern\fcharset238\fprq1 Courier New CE;}
{\f57\fmodern\fcharset204\fprq1 Courier New Cyr;}{\f59\fmodern\fcharset161\fprq1 Courier New Greek;}{\f60\fmodern\fcharset162\fprq1 Courier New Tur;}{\f61\fmodern\fcharset177\fprq1 Courier New (Hebrew);}
{\f62\fmodern\fcharset178\fprq1 Courier New (Arabic);}{\f63\fmodern\fcharset186\fprq1 Courier New Baltic;}{\f64\fmodern\fcharset163\fprq1 Courier New (Vietnamese);}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;
\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;
\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext0 Normal;}{\*\cs10 \additive \ssemihidden 
Default Paragraph Font;}{\*\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\trcbpat1\trcfpat1\tscellwidthfts0\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv 
\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1024\langfe1024\cgrid\langnp1024\langfenp1024 \snext11 \ssemihidden Normal Table;}{\*\cs15 \additive \fs20\loch\f2\hich\af2\dbch\af0 \sbasedon10 \styrsid9440842 
HTML Code;}}{\*\rsidtbl \rsid9440842\rsid15621527}{\*\generator Microsoft Word 10.0.2627;}{\info{\author Thoth Software}{\operator Thoth Software}{\creatim\yr2010\mo7\dy13\hr14\min36}{\revtim\yr2010\mo8\dy1\hr15\min17}{\version3}{\edmins5}{\nofpages3}
{\nofwords532}{\nofchars3036}{\*\company RS Graphix}{\nofcharsws3561}{\vern16437}}\widowctrl\ftnbj\aenddoc\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\horzdoc\dghspace120\dgvspace120\dghorigin1701\dgvorigin1984\dghshow0\dgvshow3
\jcompress\viewkind4\viewscale150\nolnhtadjtbl\rsidroot9440842 \fet0\sectd \linex0\sectdefaultcl\sftnbj {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl3
\pndec\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang {\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}
{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}\pard\plain 
\ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f1\fs20\insrsid9440842 In statdefs.h, replace the appropriate enum with this
\par }{\b\f1\fs20\insrsid9440842 [BEGIN]
\par }{\f2\fs20\cf2\insrsid9440842 enum}{\f2\fs20\insrsid9440842  \{
\par \tab SKILL_FIRSTSKILL = NATURAL_MAX_STATS,\tab \tab }{\f2\fs20\cf11\insrsid9440842 //Skills are divided by 3
\par }{\f2\fs20\insrsid9440842 \tab SKILL_SWORDSMANSHIP = SKILL_FIRSTSKILL,\tab \tab }{\f2\fs20\cf11\insrsid9440842 //1/3 = Speed
\par }{\f2\fs20\insrsid9440842 \tab SKILL_MARTIALARTS,\tab \tab \tab \tab \tab \tab \tab }{\f2\fs20\cf11\insrsid9440842 //1/3 = Balance (Accuracy)
\par }{\f2\fs20\insrsid9440842 \tab SKILL_SMALLARMS,\tab \tab \tab \tab \tab \tab \tab }{\f2\fs20\cf11\insrsid9440842 //1/3 = Power (Damage)
\par }{\f2\fs20\insrsid9440842 \tab SKILL_AXEHANDLING,
\par \tab SKILL_BLUNTARMS,
\par \tab SKILL_ARCHERY,\tab \tab \tab \tab 
\par \tab }{\f2\fs20\cf11\insrsid9440842 //SKILL_SHIELDHANDLING,
\par }{\f2\fs20\insrsid9440842 \tab }{\f2\fs20\cf11\insrsid9440842 //SKILL_TWOHANDED,\tab \tab \tab //This skill limits who can use two-handed weapons
\par }{\f2\fs20\insrsid9440842 \tab SKILL_SPELLCASTING,\tab \tab \tab }{\f2\fs20\cf11\insrsid9440842 //This skill has many substats
\par }{\f2\fs20\insrsid9440842 \tab SKILL_PARRY,
\par \tab SKILL_POLEARMS,\tab \tab \tab \tab \tab  }{\f2\fs20\cf11\insrsid9440842 // MiB JUL2010_02 - Pole Arms!
\par }{\f2\fs20\insrsid9440842 \tab SKILL_MAX_ATTACK = SKILL_POLEARMS}{\f2\fs20\insrsid15621527  + 1}{\f2\fs20\insrsid9440842 ,  }{\f2\fs20\cf11\insrsid9440842 //Max number of attack skills (MiB JUL2010_02 - Again)
\par //\tab SKILL_SPELLPREPARING,
\par //\tab SKILL_SWIMMING,
\par //\tab SKILL_THEFT,
\par 
\par }{\f2\fs20\insrsid9440842 \tab SKILL_LASTSKILL = SKILL_POLEARMS, }{\f2\fs20\cf11\insrsid9440842 //MiB JUL2010_02 - And again..
\par }{\f2\fs20\insrsid9440842 \tab SKILL_MAX_STATS = (SKILL_LASTSKILL+1) - NATURAL_MAX_STATS,
\par \tab STATS_TOTAL = (NATURAL_MAX_STATS + SKILL_MAX_STATS)
\par \};}{\b\f1\fs20\insrsid9440842 
\par [END]}{\f1\fs20\insrsid9440842 
\par 
\par In Stats.cpp, replace the appropriate array with this
\par }{\b\f1\fs20\insrsid9440842 [BEGIN]
\par }{\f2\fs20\insrsid9440842 skillstatinfo_t SkillStatList[255] =
\par \{
\par \tab "Swordsmanship",\tab "swordsmanship",\tab STATPROP_TOTAL,
\par \tab "Martial Arts",\tab \tab "martialarts",\tab \tab STATPROP_TOTAL,
\par \tab "Small Arms",\tab \tab "smallarms",\tab \tab STATPROP_TOTAL,
\par \tab "Axe Handling",\tab \tab "axehandling",\tab \tab STATPROP_TOTAL,
\par \tab "Blunt Arms",\tab \tab "bluntarms",\tab \tab STATPROP_TOTAL,
\par \tab "Archery",\tab \tab \tab "archery",\tab \tab \tab STATPROP_TOTAL,
\par }{\f2\fs20\cf11\insrsid9440842 //\tab "Shield handling",
\par //\tab "Two-handed weapons",
\par //\tab "Dual weapons",
\par }{\f2\fs20\insrsid9440842 \tab "Spell Casting",\tab "spellcasting",\tab \tab STAT_MAGIC_TOTAL,
\par \tab "Parry",\tab \tab \tab "parry",\tab \tab \tab 1,
\par \tab "Pole Arms",\tab \tab \tab "polearms",\tab \tab \tab STATPROP_TOTAL,\tab \tab }{\f2\fs20\cf11\insrsid9440842 //MiB JUL2010_02 - Pole Arms!
\par //\tab "Spell Preparation",
\par //\tab "Swimming",
\par //\tab "Pickpocket", true,
\par }{\f2\fs20\insrsid9440842 \};}{\b\f1\fs20\insrsid9440842 
\par [END]
\par 
\par }{\f1\fs20\insrsid9440842 In MSMonsterServer.cpp, comment this bit out}{\b\f1\fs20\insrsid9440842 
\par [BEGIN]
\par }{\f2\fs20\insrsid9440842 \tab \tab \tab }{\f2\fs20\cf11\insrsid9440842 /* MiB JUL2010_02 - Remove Parry as a levellable stat
\par \tab \tab \tab //Learn parry skill from  a successful parry
\par \tab \tab \tab if( !pAttacker->IsPlayer() )  //Can't learn from being attacked by players
\par \tab \tab \tab \tab if ( GetSkillStat( SKILL_PARRY, 0 ) < CHAR_LEVEL_CAP )
\par \tab \tab \tab \tab \tab LearnSkill ( SKILL_PARRY, STATPROP_SKILL, max( 0 , pMonster->m_SkillLevel * 2 ) );
\par \tab \tab \tab //MiB Jul2008a (JAN2010_15) - Parry was capped at 40. What say we stop exp gain?
\par 
\par \tab \tab \tab \tab /*if (pMonster->m_SkillLevel * 2 > 0)
\par \tab \tab \tab \tab \tab LearnSkill (SKILL_PARRY, STATPROP_SKILL, pMonster->m_SkillLevel * 2 );
\par \tab \tab \tab \tab else
\par \tab \tab \tab \tab \tab LearnSkill (SKILL_PARRY, STATPROP_SKILL, 0 );
\par \tab \tab \tab \tab //LearnSkill( SKILL_PARRY, STATPROP_SKILL, max(pAttacker->m_SkillLevel * 2,0) );*/}{\b\f1\fs20\insrsid9440842 
\par [END]
\par 
\par }{\f1\fs20\insrsid9440842 Search "}{\f2\fs20\cf2\insrsid9440842 void}{\f2\fs20\insrsid9440842  chardata_t::ReadSkills1( byte DataID, CPlayer_DataBuffer &m_File )}{\f1\fs20\insrsid9440842 " and add AFTER the for-loop (but still in the if-block)}{
\b\f1\fs20\insrsid9440842 
\par [BEGIN]
\par }{\f2\fs20\cf11\insrsid9440842 \tab \tab // MiB JUL2010_02 - Hacky, but if we add more stats and we load a character that doesn't have said stat in the file
\par }{\f2\fs20\insrsid9440842 \tab \tab }{\f2\fs20\cf11\insrsid9440842 //\tab \tab we set it to the default new stat value (level 0 in Prof and Balance, 1 in Power)
\par }{\f2\fs20\insrsid9440842 \tab \tab }{\f2\fs20\cf2\insrsid9440842 int}{\f2\fs20\insrsid9440842  StatsRemaining = m_Stats.size() - Stats;
\par \tab \tab foreach( i , StatsRemaining )
\par \tab \tab \{
\par \tab \tab \tab CStat &Stat = m_Stats[ i + Stats ];
\par \tab \tab \tab Stat.m_SubStats[ Stat.m_SubStats.size()-1 ].Value = 1;
\par \tab \tab \}}{\b\f1\fs20\insrsid9440842 
\par [END]
\par 
\par 
\par 
\par 
\par CLIENT DLL
\par }{\f1\fs20\insrsid9440842 
\par Search "}{\f2\fs20\cf2\insrsid9440842 if}{\f2\fs20\insrsid9440842 ( m_ActiveStat < 0}{\f1\fs20\insrsid9440842 " and change it to this
\par }{\f2\fs20\cf2\insrsid9440842 if}{\f2\fs20\insrsid9440842 ( m_ActiveStat < 0 || msstring(SkillStatList[m_ActiveStat].Name) == "Parry" )
\par 
\par 
\par 
\par }{\b\f2\fs20\insrsid9440842 SCRIPTS REMINDER:
\par }{\f2\fs20\insrsid9440842 reg.newchar.weaponlist
\par (Add base pole arm, leather gauntlets, and whatever you want for the 9th starting weapon [I did fire dart])
\par 
\par 
\par }{\f1\fs20\insrsid9440842 Also new general script command:
\par }{\cs15\f2\fs20\lang2057\langfe1033\langnp2057\insrsid9440842 \tab //MiB JUL2010_02\~ \~$get_skillname(<skill>)}{\f2\fs20\lang2057\langfe1033\langnp2057\insrsid9440842 \line }{\cs15\f2\fs20\lang2057\langfe1033\langnp2057\insrsid9440842 \tab 
// Turns "skill.bluntarms" to "Blunt Arms" (skill. is optional)}{\f2\fs20\lang2057\langfe1033\langnp2057\insrsid9440842 \line }{\cs15\f2\fs20\lang2057\langfe1033\langnp2057\insrsid9440842 \tab else if( ParserName.starts_with("$get_skillname") )}{
\f2\fs20\lang2057\langfe1033\langnp2057\insrsid9440842 \line }{\cs15\f2\fs20\lang2057\langfe1033\langnp2057\insrsid9440842 \tab \{}{\f2\fs20\lang2057\langfe1033\langnp2057\insrsid9440842 \line }{\cs15\f2\fs20\lang2057\langfe1033\langnp2057\insrsid9440842 
\tab \~ \~if ( Params.size() >= 1 )}{\f2\fs20\lang2057\langfe1033\langnp2057\insrsid9440842 \line }{\cs15\f2\fs20\lang2057\langfe1033\langnp2057\insrsid9440842 \tab \~ \~\{}{\f2\fs20\lang2057\langfe1033\langnp2057\insrsid9440842 \line }{
\cs15\f2\fs20\lang2057\langfe1033\langnp2057\insrsid9440842 \tab \tab msstring Skill = Params[0].starts_with("skill.") ? Params[0].substr(6) : Params[0];}{\f2\fs20\lang2057\langfe1033\langnp2057\insrsid9440842 \line }{
\cs15\f2\fs20\lang2057\langfe1033\langnp2057\insrsid9440842 \tab \tab return GetSkillName( GetSkillStatByName( Skill.c_str() ) );}{\f2\fs20\lang2057\langfe1033\langnp2057\insrsid9440842 \line }{\cs15\f2\fs20\lang2057\langfe1033\langnp2057\insrsid9440842 
\tab \~ \~\}}{\f2\fs20\lang2057\langfe1033\langnp2057\insrsid9440842 \line }{\cs15\f2\fs20\lang2057\langfe1033\langnp2057\insrsid9440842 \tab \}}{\f1\fs20\insrsid9440842 
\par }}