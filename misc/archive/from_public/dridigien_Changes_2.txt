

REPLACE vgui_Status.h:

class VGUI_Status;
class VGUI_StatusIcon;

static VGUI_Status *StatusIcons;
static COLOR DurColor( 0, 255, 0, 128);

#define ICON_W		XRES(64 * 0.625) //Width
#define ICON_H		YRES(75 * 0.625) //Height
#define ICONIMG_W	XRES(64 * 0.625) //Width
#define ICONIMG_H	YRES(64 * 0.625) //Height

//FN Sprite
#define FN_SPRITE	"FN"		 //Sprite
#define FN_W	XRES(64 * 0.625) //Width
#define FN_H	YRES(64 * 0.625) //Height

enum HUD_IDS
{
	FN_DW = -3,
	REMOVE_IMG ,
	REMOVE_STATUS,
	REMOVE_ALL,
	ADD_STATUS,
	ADD_IMG,
	FN_UP,
};


class VGUI_StatusIcon : public Panel
{
public:
	CImageDelayed m_Img;	//Icon
	
	CStatusBar	 *m_pBar;	//Duration Bar
	char  m_Name[32];	//ID of Img
	float m_Time;		//Start Time
	float m_Dur;		//Duration

	VGUI_StatusIcon( Panel *pParent, const char* Icon, const char* Name, 
		float Dur, int x, int y, bool bSprite=false ) : Panel( x, y, ICON_W, ICON_H )
	{
		setParent( pParent );
		setBgColor( 0, 0, 0, 255 );

		strcpy( m_Name, Name );
		m_Time = gpGlobals->time;
		m_Dur = Dur;

		m_Img.setParent( this );
		m_Img.LoadImg( Icon, bSprite, false );
		m_Img.setFgColor( 255, 255, 255, 255 );
		m_Img.setSize( ICONIMG_W, ICONIMG_H );

		m_pBar = new CStatusBar( this, 0, ICONIMG_H, ICON_W, ICON_H-ICONIMG_H );
		m_pBar->m_fBorder = true;
		m_pBar->Set( 100.0 );
		m_pBar->setVisible( true );
	}

	void Update( void )
	{	
		if( EngineFunc::CVAR_GetFloat("ms_showhudstatus")==0 )
		{
			m_Img.setVisible( false );
			m_pBar->setVisible( false );
		}
		else
		{
			m_Img.setVisible( true );
			m_pBar->setVisible( true );

			float flPercent = 1.0 - (gpGlobals->time-m_Time)/m_Dur;
			m_pBar->Set( flPercent * 100.0f ); 
			m_pBar->SetFGColorRGB( DurColor );
			
			/*
			// Use Different Colors for % left
			if( flPercent < 0.15 ) 
				m_pBar->SetFGColorRGB( LowColor ); 
			else if( flPercent <= 0.85f ) 
				m_pBar->SetFGColorRGB( MedColor ); 
			else 
				m_pBar->SetFGColorRGB( HighColor ); 
			*/
		}
	}

	bool IsActive( void )
	{
		return gpGlobals->time < (m_Time + m_Dur);
	}

	void Kill( void )
	{
		m_Time = 0;
		m_Dur = 0;
		m_Img.setFgColor( 0, 0, 0, 0 );
		m_Img.ClearImg();		
		m_pBar->Set( 0 );
		m_pBar->setVisible( false );
	}

	~VGUI_StatusIcon()
	{
		Kill();
		delete m_pBar;
		//delete m_Img;
	}

};

class VGUI_ImgIcon : public Panel
{
public:
	VGUI_Image3D m_Img; //Icon
	char  m_ImgName[32];	//Name of Img
	char  m_Name[32];	//ID of Img
	float m_Time;		//Start Time
	float m_Dur;		//Duration

	VGUI_ImgIcon( Panel *pParent, const char* Img, const char* Name, 
		int x, int y, int w, int h, float Dur=-1.0)	: Panel( XRES(x), YRES(y), w, h )
	{
		setParent( pParent );
		setBgColor( 0, 0, 0, 255 );

		strcpy( m_ImgName, Img );
		strcpy( m_Name, Name );
		m_Time = gpGlobals->time;
		m_Dur = Dur;
		
		m_Img.setParent( this );
		m_Img.LoadImg( Img, true, false );
		m_Img.setFgColor( 255, 255, 255, 255 );
		m_Img.setSize( w, h );
	}
	void Update()
	{
		if( EngineFunc::CVAR_GetFloat("ms_showhudimgs")==0 )
			m_Img.setVisible( false );
		else
			m_Img.setVisible( true );
	}
	bool IsActive( void )
	{
		return (m_Dur == -1.0 ) || (gpGlobals->time < (m_Time + m_Dur));
	}
	void Kill( void )
	{
		m_Time = 0;
		m_Dur = 0;
		m_Img.setFgColor( 0, 0, 0, 0 );
		m_Img.LoadImg( "skull", false, false );
		m_Img.ClearImg();
	}

	~VGUI_ImgIcon()
	{
		Kill();
	}

};

class VGUI_Status : public Panel, public IHUD_Interface
{
public:
	mslist<VGUI_StatusIcon*> m_Status;
	mslist<VGUI_ImgIcon*> m_Img;
	CImageDelayed	m_FN;
	bool m_bFN;

	VGUI_Status( Panel *pParent ) : Panel( 0, 0, ScreenWidth, ScreenHeight )
	{
		startdbg;
		StatusIcons = this;

		dbg( "Begin" );
		setParent( pParent );
		SetBGColorRGB( Color_Transparent );

		//FN Sprite
		m_bFN = true;
		m_FN.setParent( this );
		m_FN.LoadImg( FN_SPRITE, false, false );
		m_FN.setSize( FN_W, FN_H );
		m_FN.setPos( XRES(640)-FN_W, 10 );
		m_FN.setFgColor( 255, 255, 255, 255 );
		m_FN.setVisible( false );
		
		enddbg;
	}

	void Update( void ) 
	{ 
		//Update/Check Status Icons
		size_t i = 0;
		while( i < m_Status.size() ) 
		{
			if( !m_Status[i]->IsActive() )// Kill Status
			{
				m_Status[i]->Kill();
				m_Status.erase( i );
			}

			else
			{
				m_Status[i]->setPos( (ICON_W*(i/5))+10, (ICON_H*(i%5))+10 );
				m_Status[i]->Update();
				i++;
			}
		}

		//Update/Check Imgs
		i = 0;
		while( i < m_Img.size() ) 
		{
			if( !m_Img[i]->IsActive() )// Kill Img
			{
				m_Img[i]->Kill();
				m_Img.erase( i );
			}
			else
			{
				m_Img[i]->Update();
				i++;
			}
		}

		//FN Check
		if( EngineFunc::CVAR_GetFloat("ms_showhudstatus")==1 && m_bFN==false )
			m_FN.setFgColor( 255, 255, 255, 255 );
		else
			m_FN.setFgColor( 0, 0, 0, 0 );
	}	
};

static void SetFN( bool Up )
{
	StatusIcons->m_bFN = Up;
	if( Up )
		StatusIcons->m_FN.setVisible( false );
	else
		StatusIcons->m_FN.setVisible( true );
}
static void AddStatus( const char* Icon, const char* Name, float Dur, bool bSprite=false )
{	StatusIcons->m_Status.add( new VGUI_StatusIcon(StatusIcons,Icon,Name,Dur,0,0,bSprite) );	}

static void AddImg( const char* Img, const char* Name,
		int x, int y, int w, int h, float Dur=-1.0 )
{	
	bool found = false;
	foreach( i, StatusIcons->m_Img.size() )
		//Check for ID conflictions
		if( !strcmp(Name,StatusIcons->m_Img[i]->m_Name) )
		{	found = true; break;		}

	if( !found )
		StatusIcons->m_Img.add( 
			new VGUI_ImgIcon(StatusIcons,Img,Name,x,y,w,h,Dur) );	
}

void KillStatus( const char* Name )
{
	foreach( i, StatusIcons->m_Status.size() ) 
	{
		if( !strcmp(StatusIcons->m_Status[i]->m_Name,Name) ) 
		{
			StatusIcons->m_Status[i]->Kill();
			StatusIcons->m_Status.erase( i );
			break;
		}
	}
}
void KillImg( const char* Name )
{
	foreach( i, StatusIcons->m_Img.size() ) 
	{
		if( !strcmp(StatusIcons->m_Img[i]->m_Name,Name) ) 
		{
			StatusIcons->m_Img[i]->Kill();
			StatusIcons->m_Img.erase( i );
			break;
		}
	}
}
void KillAllStatus( )
{
	while( StatusIcons->m_Status.size() > 0 )
	{
		StatusIcons->m_Status[0]->Kill();
		StatusIcons->m_Status.erase( 0 );
	}
}
void KillAllImgs()
{
	while( StatusIcons->m_Img.size() > 0 )
	{
		StatusIcons->m_Img[0]->Kill();
		StatusIcons->m_Img.erase( 0 );
	}
}
void KillAll()
{
	KillAllStatus();
	KillAllImgs();
}

int __MsgFunc_StatusIcons( const char *pszName, int iSize, void *pbuf )
{
	startdbg;
		dbg( "Reading.." );
		BEGIN_READ( pbuf, iSize );
		int	Type = READ_SHORT();

		//Kill All Status Icons
		if( Type == REMOVE_IMG )
		{
			dbg( "Reading.. Remove Img" );
			const char* ID = READ_STRING();
			if( !strcmp(ID,"all") )
				KillAllImgs();
			else
				KillImg( ID );
		}

		//Kill All Status Icons
		else if( Type == REMOVE_STATUS )
		{
			dbg( "Reading.. Remove Status" );
			const char* ID = READ_STRING();
			if( !strcmp(ID,"all") )
				KillAllStatus();
			else
				KillStatus( ID );
		}

		//Kill All Icons
		else if( Type == REMOVE_ALL )
		{
			dbg( "Reading.. Remove All" );
			KillAll();
		}

		//Add Status Icon
		else if( Type == ADD_STATUS )
		{
			dbg( "Reading.. Add Status" );
			msstring Icon = READ_STRING();
			msstring Name = READ_STRING();
			float Dur = READ_FLOAT();
			bool isTGA = (READ_BYTE()==1);
			if( strcmp(Name,"all") )
				AddStatus( Icon.c_str(), Name.c_str(), Dur, false );
		}

		//Add Img Icon
		else if( Type == ADD_IMG )
		{
			dbg( "Reading.. Add Img" );
			msstring Icon = READ_STRING();
			msstring Name = READ_STRING();
			int x = READ_SHORT();
			int y = READ_SHORT();
			int w = READ_SHORT();
			int h = READ_SHORT();
			float Dur = READ_FLOAT();
			if( strcmp(Name,"all") )
				AddImg( Icon.c_str(), Name.c_str(), x,y,w,h, Dur );
		}

		//FN Connection
		else if( Type == FN_UP )
			SetFN( true );

		else if( Type == FN_DW )
			SetFN( false );

	enddbg;
	return 0;
}





in SrciptCmds.cpp:

	CScript::Script_Setup( )
	.
	.
	.
	m_GlobalCmds.add( scriptcmdname_t( "addstatusicon" ) ); //Drigien APR2008
		
	m_GlobalCmds.add( scriptcmdname_t( "addimgicon" ) );	//Drigien MAY2008
		
	m_GlobalCmds.add( scriptcmdname_t( "killicons" ) );	//Drigien MAY2008
		
	m_GlobalCmds.add( scriptcmdname_t( "killstatusicon" ) );//Drigien MAY2008
		
	m_GlobalCmds.add( scriptcmdname_t( "killimgicon" ) );	//Drigien MAY2008
		
	m_GlobalCmds.add( scriptcmdname_t( "setfnconnection" ) );	//Drigien MAY2008

	--- AND ---

	CScript::Script_ExecuteCmd(
	.
	.
	.
	//***************************** ADDSTATUSICON *************************
	//addstatusicon <target> <icon> <duration> [isTGA]
	//Drigien APR2008
	if( Cmd.Name() == "addstatusicon" ) 
	{
	#ifdef VALVE_DLL
		if( Params.size( ) >= 3 )
		{
			CBaseEntity *pEnt = m.pScriptedEnt->RetrieveEntity( Params[0] );
			CBasePlayer *pPlayer = pEnt->IsPlayer() ? (CBasePlayer *)pEnt : NULL;
			bool isTGA = false;
			if( Params.size() >= 4 )
				isTGA = (Params[3] == "true");
				//isTGA = strcmp(Params[3], "false");				

			if( pPlayer )
			{
				msstring &Icon = Params[1]; 
				msstring &Name = Params[2]; 
				MESSAGE_BEGIN( MSG_ONE, g_netmsg[NETMSG_STATUSICONS], NULL, pPlayer->pev ); 
					WRITE_SHORT( 1 );
					WRITE_STRING( Icon.c_str() );  //Icon
					WRITE_STRING( Name.c_str() );  //ID Name
					WRITE_FLOAT( atof(Params[3].c_str()) );	//Duration
					WRITE_BYTE( isTGA );				//isTGA
				MESSAGE_END(); 
			}
		}
		else ERROR_MISSING_PARMS;
	#endif
	}
	//***************************** ADDIMGICON *************************
	//addimgicon <target> <icon> <name> <x> <y> <width> <height> <duration>
	//NOTE: USES TGA FILES ONLY!! Path Starts: msc\gfx\vgui\
	//Drigien MAY2008
	else if( Cmd.Name() == "addimgicon" ) 
	{
	#ifdef VALVE_DLL
		if( Params.size( ) >= 8 )
		{
			CBaseEntity *pEnt = m.pScriptedEnt->RetrieveEntity( Params[0] );
			CBasePlayer *pPlayer = pEnt->IsPlayer() ? (CBasePlayer *)pEnt : NULL;
			if( pPlayer )
			{
				msstring &Img = Params[1]; 
				msstring &Name = Params[2]; 
				MESSAGE_BEGIN( MSG_ONE, g_netmsg[NETMSG_STATUSICONS], NULL, pPlayer->pev ); 
					WRITE_SHORT( 2 );
					WRITE_STRING( Img.c_str() );  //Icon
					WRITE_STRING( Name.c_str() );	// ID Name
					WRITE_SHORT( atoi(Params[3].c_str()) ); //X Pos
					WRITE_SHORT( atoi(Params[4].c_str()) ); //Y Pos
					WRITE_SHORT( atoi(Params[5].c_str()) ); //Width
					WRITE_SHORT( atoi(Params[6].c_str()) ); //Height
					WRITE_FLOAT( atof(Params[7].c_str()) );	//Duration
				MESSAGE_END(); 
			}
		}
		else ERROR_MISSING_PARMS;
	#endif
	}
	//***************************** KILLICONS *************************
	//killicons <target>
	//Drigien MAY2008
	else if( Cmd.Name() == "killicons" ) 
	{
	#ifdef VALVE_DLL
		if( Params.size( ) >= 1 )
		{
			CBaseEntity *pEnt = m.pScriptedEnt->RetrieveEntity( Params[0] );
			CBasePlayer *pPlayer = pEnt->IsPlayer() ? (CBasePlayer *)pEnt : NULL;
			if( pPlayer )
			{
				MESSAGE_BEGIN( MSG_ONE, g_netmsg[NETMSG_STATUSICONS], NULL, pPlayer->pev ); 
					WRITE_SHORT( 0 );
				MESSAGE_END();		
			}
		}
		else ERROR_MISSING_PARMS;
	#endif
	}	
	//***************************** KILLSTAUTSICONS *************************
	//killstatusicon <target [icon id]
	//Drigien MAY2008
	else if( Cmd.Name() == "killstatusicon" ) 
	{
	#ifdef VALVE_DLL
		if( Params.size( ) >= 1 )
		{
			CBaseEntity *pEnt = m.pScriptedEnt->RetrieveEntity( Params[0] );
			CBasePlayer *pPlayer = pEnt->IsPlayer() ? (CBasePlayer *)pEnt : NULL;
			if( pPlayer )
			{
				
				MESSAGE_BEGIN( MSG_ONE, g_netmsg[NETMSG_STATUSICONS], NULL, pPlayer->pev ); 
					WRITE_SHORT( -1 );
					if( Params.size() == 1 )						
						WRITE_STRING( "all" );
					else if( Params.size() >= 2 )
						WRITE_STRING( Params[1].c_str() );
				MESSAGE_END(); 
			}
		}
		else ERROR_MISSING_PARMS;
	#endif
	}
	//***************************** KILLIMGICON *************************
	//killimgicon <target> [img id]
	//Drigien MAY2008
	else if( Cmd.Name() == "killimgicon" ) 
	{
	#ifdef VALVE_DLL
		if( Params.size( ) >= 1 )
		{
			CBaseEntity *pEnt = m.pScriptedEnt->RetrieveEntity( Params[0] );
			CBasePlayer *pPlayer = pEnt->IsPlayer() ? (CBasePlayer *)pEnt : NULL;
			if( pPlayer )
			{
				
				MESSAGE_BEGIN( MSG_ONE, g_netmsg[NETMSG_STATUSICONS], NULL, pPlayer->pev ); 
					WRITE_SHORT( -2 );
				if( Params.size() == 1 )						
						WRITE_STRING( "all" );
				else if( Params.size() >= 2 )
						WRITE_STRING( Params[1].c_str() );
				MESSAGE_END(); 
			}
		}
		else ERROR_MISSING_PARMS;
	#endif
	}
	//***************************** SETFNCONNECTION *************************
	//setfnconnection <bool up>
	//Drigien MAY2008
	else if( Cmd.Name() == "setfnconnection" ) 
	{
	#ifdef VALVE_DLL
		if( Params.size( ) >= 1 )
		{
			CBasePlayer *pPlayer = 0;

			for ( int i=1; i<=gpGlobals->maxClients; i++ )
			{
				pPlayer = (CBasePlayer*)UTIL_PlayerByIndex( i );
				if( pPlayer )
				{				
						MESSAGE_BEGIN( MSG_ONE, g_netmsg[NETMSG_STATUSICONS], NULL, pPlayer->pev ); 
						if( !strcmp( Params[1].c_str(),"true") )
							WRITE_SHORT( 3 );
						else
							WRITE_SHORT( -3 );
						MESSAGE_END(); 
				}
			}
		}
		else ERROR_MISSING_PARMS;
	#endif
	}
	

in void MSCLGlobals::Initialize( ):
	.
	.
	.
	CVAR_CREATE( "ms_showhudstatus", "1", FCVAR_CLIENTDLL );		// Drigien MAY2008 - Shows/Hides The HUD Status Icons

	CVAR_CREATE( "ms_showhudimgs", "1", FCVAR_CLIENTDLL );			// Drigien MAY2008 - Shows/Hides The HUD Images