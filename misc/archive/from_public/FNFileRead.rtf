{\rtf1\adeflang1025\ansi\ansicpg1252\uc1\adeff0\deff0\stshfdbch0\stshfloch0\stshfhich0\stshfbi0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}{\f169\froman\fcharset238\fprq2 Times New Roman CE;}{\f170\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f172\froman\fcharset161\fprq2 Times New Roman Greek;}
{\f173\froman\fcharset162\fprq2 Times New Roman Tur;}{\f174\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f175\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f176\froman\fcharset186\fprq2 Times New Roman Baltic;}
{\f177\froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\f179\fswiss\fcharset238\fprq2 Arial CE;}{\f180\fswiss\fcharset204\fprq2 Arial Cyr;}{\f182\fswiss\fcharset161\fprq2 Arial Greek;}{\f183\fswiss\fcharset162\fprq2 Arial Tur;}
{\f184\fbidi \fswiss\fcharset177\fprq2 Arial (Hebrew);}{\f185\fbidi \fswiss\fcharset178\fprq2 Arial (Arabic);}{\f186\fswiss\fcharset186\fprq2 Arial Baltic;}{\f187\fswiss\fcharset163\fprq2 Arial (Vietnamese);}
{\f189\fmodern\fcharset238\fprq1 Courier New CE;}{\f190\fmodern\fcharset204\fprq1 Courier New Cyr;}{\f192\fmodern\fcharset161\fprq1 Courier New Greek;}{\f193\fmodern\fcharset162\fprq1 Courier New Tur;}
{\f194\fbidi \fmodern\fcharset177\fprq1 Courier New (Hebrew);}{\f195\fbidi \fmodern\fcharset178\fprq1 Courier New (Arabic);}{\f196\fmodern\fcharset186\fprq1 Courier New Baltic;}{\f197\fmodern\fcharset163\fprq1 Courier New (Vietnamese);}}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;
\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 
\ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext0 Normal;}{\*\cs10 \additive \ssemihidden Default Paragraph Font;}{\*
\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tblind0\tblindtype3\tscellwidthfts0\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv 
\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20 \ltrch\fcs0 \fs20\lang1024\langfe1024\cgrid\langnp1024\langfenp1024 \snext11 \ssemihidden Normal Table;}}
{\*\latentstyles\lsdstimax156\lsdlockeddef0}{\*\rsidtbl \rsid9570860\rsid11027494\rsid11475261\rsid12609691}{\*\generator Microsoft Word 11.0.8134;}{\info{\operator Jacob Vosik}{\creatim\yr2008\mo1\dy30\hr18\min53}{\revtim\yr2008\mo1\dy30\hr20\min4}
{\version4}{\edmins31}{\nofpages5}{\nofwords873}{\nofchars4980}{\nofcharsws5842}{\vern24611}{\*\password 00000000}}{\*\xmlnstbl {\xmlns1 http://schemas.microsoft.com/office/word/2003/wordml}}
\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect 
\widowctrl\ftnbj\aenddoc\donotembedsysfont0\donotembedlingdata1\grfdocevents0\validatexml0\showplaceholdtext0\ignoremixedcontent0\saveinvalidxml0\showxmlerrors0\horzdoc\dghspace120\dgvspace120\dghorigin1701\dgvorigin1984\dghshow0\dgvshow3
\jcompress\viewkind4\viewscale100\rsidroot12609691 \fet0{\*\wgrffmtfilter 013f}\ilfomacatclnup0\ltrpar \sectd \ltrsect\linex0\sectdefaultcl\sftnbj {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl2
\pnucltr\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang {\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl6
\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang 
{\pntxtb (}{\pntxta )}}\pard\plain \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \ab\af2\afs20 \ltrch\fcs0 
\b\f2\fs20\insrsid11027494 In cbase.h, below the definition of filesOpen, define filesOpenFN (same format and all)
\par In cbase.h, add "}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11027494 bool}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494  readyForRead; }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf11\insrsid11027494 //For FN Files}{
\rtlch\fcs1 \ab\af2\afs20 \ltrch\fcs0 \b\f2\fs20\insrsid11027494 " as a public variable in scriptfile_t}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494 
\par 
\par ScriptCmds.cpp - new script function. (Don't forget to add it above)}{\rtlch\fcs1 \ab\af2\afs20 \ltrch\fcs0 \b\f2\fs20\insrsid11027494 
\par [BEGIN]}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494 
\par \tab }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf11\insrsid11027494 //**************************** CLOSEFNFILE **************************
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494 \tab }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf11\insrsid11027494 //MiB Feb2008a
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494 \tab }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf11\insrsid11027494 //closefnfile <fileName>
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494 \tab }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11027494 else}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494  }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 
\f2\fs20\cf2\insrsid11027494 if}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494 ( Cmd.Name() == "closefnfile" )
\par \tab \{
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11027494 #ifdef}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494  VALVE_DLL
\par \tab \tab }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11027494 if}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494 ( Params.size() >= 1 )
\par \tab \tab \{
\par \tab \tab \tab msstring fileName = Params[0];
\par \tab \tab \tab foreach( i , m.pScriptedEnt->filesOpenFN.size() )
\par \tab \tab \tab \{
\par \tab \tab \tab \tab }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11027494 if}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494 ( m.pScriptedEnt->filesOpenFN[i].fileName == fileName )
\par \tab \tab \tab \tab \{
\par \tab \tab \tab \tab \tab m.pScriptedEnt->filesOpenFN.erase( i );
\par \tab \tab \tab \tab \tab }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11027494 break}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494 ;
\par \tab \tab \tab \tab \}
\par \tab \tab \tab \}
\par \tab \tab \}
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11027494 #endif
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494 \tab \}
\par }{\rtlch\fcs1 \ab\af2\afs20 \ltrch\fcs0 \b\f2\fs20\insrsid11027494 [END]
\par 
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494 Script.cpp - $get_fnfileline}{\rtlch\fcs1 \ab\af2\afs20 \ltrch\fcs0 \b\f2\fs20\insrsid11027494 
\par [BEGIN]
\par }\pard \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0\pararsid11475261 {\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11475261 \tab \tab }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf11\insrsid11475261 //MiB Feb2008a
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11475261 \tab \tab }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf11\insrsid11475261 
//$get_fnfileline(<fileName>) - If the file is ready to read, returns the line, otherwise warns the script that it's not ready to be read
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11475261 \tab \tab }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11475261 else}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11475261  }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 
\f2\fs20\cf2\insrsid11475261 if}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11475261 ( ParserName == "$get_fnfileline" )
\par \tab \tab \{
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11475261 #ifdef}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11475261  VALVE_DLL
\par \tab \tab \tab }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11475261 if}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11475261 ( Params.size() >= 1 )
\par \tab \tab \tab \{
\par \tab \tab \tab \tab msstring fileName = Params[0];
\par \tab \tab \tab \tab foreach( i , m.pScriptedEnt->filesOpenFN.size() )
\par \tab \tab \tab \tab \{
\par \tab \tab \tab \tab \tab }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11475261 if}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11475261 ( m.pScriptedEnt->filesOpenFN[i].fileName == fileName )
\par \tab \tab \tab \tab \tab \{
\par \tab \tab \tab \tab \tab \tab }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11475261 if}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11475261 ( m.pScriptedEnt->filesOpenFN[i].readyForRead )
\par \tab \tab \tab \tab \tab \tab \{
\par \tab \tab \tab \tab \tab \tab \tab }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11475261 if}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11475261 ( Params.size() >= 2 )
\par \tab \tab \tab \tab \tab \tab \tab \tab }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11475261 return}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11475261  m.pScriptedEnt->filesOpenFN[i].ScriptFile_ReadLine( atoi( Params[1] )); }{
\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf11\insrsid11475261 //Read specific line
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11475261 \tab \tab \tab \tab \tab \tab \tab }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11475261 else
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11475261 \tab \tab \tab \tab \tab \tab \tab \tab }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11475261 return}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11475261 
 m.pScriptedEnt->filesOpenFN[i].ScriptFile_ReadLine(); }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf11\insrsid11475261 //Read next line
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11475261 \tab \tab \tab \tab \tab \tab \}
\par \tab \tab \tab \tab \tab \tab }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11475261 else
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11475261 \tab \tab \tab \tab \tab \tab \{
\par \tab \tab \tab \tab \tab \tab \tab }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11475261 return}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11475261  "[NOT_READY_FOR_READ]";
\par \tab \tab \tab \tab \tab \tab \}
\par \tab \tab \tab \tab \tab \}
\par \tab \tab \tab \tab \}
\par 
\par \tab \tab \tab \tab }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf11\insrsid11475261 //We've made it here, thus we don't have the file yet
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11475261 \tab \tab \tab \tab scriptfile_t File;
\par \tab \tab \tab \tab File.fileName = fileName;
\par \tab \tab \tab \tab File.readyForRead = }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11475261 false}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11475261 ;
\par \tab \tab \tab \tab m.pScriptedEnt->filesOpenFN.add( File );
\par 
\par \tab \tab \tab \tab MSCentral::ReadFNFile( fileName, EntToString(m.pScriptedEnt) );
\par 
\par \tab \tab \tab \tab }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11475261 return}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11475261  "[NOT_READY_FOR_READ]";
\par 
\par \tab \tab \tab \}
\par \tab \tab \tab }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11475261 else}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11475261  }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11475261 return}{\rtlch\fcs1 \af2\afs20 
\ltrch\fcs0 \f2\fs20\insrsid11475261  0;
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0\pararsid11475261 {\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11475261 #endif}{\rtlch\fcs1 \ab\af2\afs20 \ltrch\fcs0 \b\f2\fs20\insrsid11027494 
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \ab\af2\afs20 \ltrch\fcs0 \b\f2\fs20\insrsid11027494 [END]
\par 
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494 MSCentralTransaction_DLL.cpp - "}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11027494 void}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494 
 CTransaction_DLL::HandleMsg( msg_t &Msg )"}{\rtlch\fcs1 \ab\af2\afs20 \ltrch\fcs0 \b\f2\fs20\insrsid11027494 
\par [BEGIN]
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494 \tab \tab }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11027494 case}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494  MSG_READFNFILE:
\par \tab \tab \{
\par \tab \tab \tab //MiB Feb2008a
\par \tab \tab \tab fnfileread_t &ReadFile = (fnfileread_t &)Msg;
\par \tab \tab \tab CBaseEntity *pEnt = StringToEnt( ReadFile.EntString );
\par \tab \tab \tab msstring tempFileName = "654nkoaeru90234aegaweg";
\par \tab \tab \tab }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11027494 bool}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494  fileExists = ReadFile.fileExists == 1;
\par \tab \tab \tab }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11027494 if}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494 ( fileExists )
\par \tab \tab \tab \{
\par \tab \tab \tab \tab }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11027494 char}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494  cFileName[256];
\par \tab \tab \tab \tab sprintf( cFileName, "%s/%s", EngineFunc::GetGameDir(), tempFileName.c_str() );
\par \tab \tab \tab \tab ofstream tempOut;
\par \tab \tab \tab \tab 
\par \tab \tab \tab \tab tempOut.open( cFileName );
\par \tab \tab \tab \tab tempOut << ReadFile.Data;
\par \tab \tab \tab \tab tempOut.close();
\par \tab \tab \tab \}
\par 
\par \tab \tab \tab foreach( i , pEnt->filesOpenFN.size() )
\par \tab \tab \tab \{
\par \tab \tab \tab \tab }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11027494 if}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494 ( pEnt->filesOpenFN[i].fileName == ReadFile.FileName && !pEnt->filesOpenFN[i].readyForRead )
\par \tab \tab \tab \tab \{
\par \tab \tab \tab \tab \tab }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11027494 if}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494 ( fileExists )
\par \tab \tab \tab \tab \tab \{
\par \tab \tab \tab \tab \tab \tab pEnt->filesOpenFN[i] = tempFileName;
\par \tab \tab \tab \tab \tab \tab pEnt->filesOpenFN[i].fileName = ReadFile.FileName;
\par \tab \tab \tab \tab \tab \tab pEnt->filesOpenFN[i].readyForRead = }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11027494 true}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494 ;
\par \tab \tab \tab \tab \tab \}
\par }\pard \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0\pararsid12609691 {\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494 \tab \tab \tab \tab \tab }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid12609691 else
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid12609691 \tab \tab \tab \tab \tab \{
\par \tab \tab \tab \tab \tab \tab pEnt->filesOpenFN[i].nofile = }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid12609691 true}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid12609691 ;
\par \tab \tab \tab \tab \tab \tab pEnt->filesOpenFN[i].readyForRead = }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid12609691 true}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid12609691 ;
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0\pararsid12609691 {\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid12609691 \tab \tab \tab \tab \tab \}}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494 
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494 
\par \tab \tab \tab \tab \tab }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid12609691 b}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11027494 reak}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid12609691 ;}{\rtlch\fcs1 \af2\afs20 
\ltrch\fcs0 \f2\fs20\cf2\insrsid11027494 
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494 \tab \tab \tab \tab \}
\par \tab \tab \tab \}
\par \tab \tab \tab std::remove( tempFileName );
\par \tab \tab \tab }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11027494 break}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494 ;
\par \tab \tab \}
\par }{\rtlch\fcs1 \ab\af2\afs20 \ltrch\fcs0 \b\f2\fs20\insrsid11027494 [END]
\par 
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494 MSCentralTransaction_DLL.cpp - search "}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11027494 else}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494  }{\rtlch\fcs1 
\af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11027494 if}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494 ( Cmd == "write" )" and put this below it}{\rtlch\fcs1 \ab\af2\afs20 \ltrch\fcs0 \b\f2\fs20\insrsid11027494 
\par [BEGIN]
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11027494 else}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494  }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11027494 if}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 
\f2\fs20\insrsid11027494 ( Cmd == "read" ) }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf11\insrsid11027494 //MiB Feb2008a
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494 \tab \tab \tab \{
\par \tab \tab \tab \tab msstring FileName = m_Params[4];
\par \tab \tab \tab \tab msstring EntString = m_Params[5];
\par \tab \tab \tab \tab Read( FileName , EntString );
\par \tab \tab \tab \}}{\rtlch\fcs1 \ab\af2\afs20 \ltrch\fcs0 \b\f2\fs20\insrsid11027494 
\par [END]
\par 
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494 MSCentralTransaction_DLL.cpp - Added mine below my write function}{\rtlch\fcs1 \ab\af2\afs20 \ltrch\fcs0 \b\f2\fs20\insrsid11027494 
\par [BEGIN]
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf11\insrsid11027494 //MiB Feb2008a
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11027494 void}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494  CTransaction_DLL::Read( }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11027494 const}{\rtlch\fcs1 \af2\afs20 
\ltrch\fcs0 \f2\fs20\insrsid11027494  }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11027494 char}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494  *FileName, }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11027494 const}{
\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494  }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11027494 char}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494  *EntString )
\par \{
\par \tab fnfileread_t FileMsg;
\par \tab strncpy( FileMsg.FileName , FileName , }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11027494 sizeof}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494 (FileMsg.FileName) );
\par \tab strncpy( FileMsg.EntString, EntString, }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11027494 sizeof}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494 (FileMsg.EntString) );
\par \tab FileMsg.Msg = MSG_READFNFILE;
\par \tab FileMsg.Length = }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11027494 sizeof}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494 (FileMsg);
\par 
\par \tab send( m_Socket, (}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11027494 const}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494  }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11027494 char}{\rtlch\fcs1 \af2\afs20 
\ltrch\fcs0 \f2\fs20\insrsid11027494  *)&FileMsg, }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11027494 sizeof}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494 (FileMsg), 0 );
\par \}}{\rtlch\fcs1 \ab\af2\afs20 \ltrch\fcs0 \b\f2\fs20\insrsid11027494 
\par [END]
\par 
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494 MSCentralTransaction_DLL.cpp - In the definition of the CTransactionDLL class}{\rtlch\fcs1 \ab\af2\afs20 \ltrch\fcs0 \b\f2\fs20\insrsid11027494 
\par [BEGIN]
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11027494 void}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494  Read( }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11027494 const}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 
\f2\fs20\insrsid11027494  }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11027494 char}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494  *FileName, }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11027494 const}{\rtlch\fcs1 
\af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494  }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11027494 char}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494  *EntString );}{\rtlch\fcs1 \ab\af2\afs20 \ltrch\fcs0 
\b\f2\fs20\insrsid11027494 
\par [END]
\par 
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494 MSCentralTransaction_DLL.cpp - Defined below the WriteFNFIle}{\rtlch\fcs1 \ab\af2\afs20 \ltrch\fcs0 \b\f2\fs20\insrsid11027494 
\par [BEGIN]
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494 //MiB Feb2008a}{\rtlch\fcs1 \ab\af2\afs20 \ltrch\fcs0 \b\f2\fs20\insrsid11027494 
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11027494 void}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494  MSCentral::ReadFNFile( msstring FileName, msstring EntString )
\par \{
\par \tab msstringlist Params;
\par \tab Params.clear();
\par \tab Params.add("read");
\par 
\par \tab Params.add(""); }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf11\insrsid11027494 //AuthID  -
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494 \tab Params.add("0");}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf11\insrsid11027494 //CharNum - These are both required, but not used for this function
\par 
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494 \tab Params.add(FileName);
\par \tab Params.add(EntString);
\par 
\par \tab DoTransaction( Params );
\par \}
\par }{\rtlch\fcs1 \ab\af2\afs20 \ltrch\fcs0 \b\f2\fs20\insrsid11027494 [END]
\par 
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494 MSCentral.h - Define under WriteFNFile
\par }{\rtlch\fcs1 \ab\af2\afs20 \ltrch\fcs0 \b\f2\fs20\insrsid11027494 [BEGIN]
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11027494 static}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494  }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11027494 void}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 
\f2\fs20\insrsid11027494  ReadFNFile( msstring FileName, msstring EntString ); //MiB Feb2008a
\par }{\rtlch\fcs1 \ab\af2\afs20 \ltrch\fcs0 \b\f2\fs20\insrsid11027494 [END]
\par 
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494 MSCentralTransaction.h - define with the others}{\rtlch\fcs1 \ab\af2\afs20 \ltrch\fcs0 \b\f2\fs20\insrsid11027494 
\par [BEGIN]
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494 //MiB Feb2008a}{\rtlch\fcs1 \ab\af2\afs20 \ltrch\fcs0 \b\f2\fs20\insrsid11027494 
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11027494 struct}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494  fnfileread_t : msg_t
\par \{
\par \tab }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11027494 char}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494  FileName[128];
\par \tab }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11027494 char}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494  EntString[64];
\par \tab ulong DataSize;
\par \tab int fileExists;
\par \tab }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11027494 char}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494  Data[1];
\par \};}{\rtlch\fcs1 \ab\af2\afs20 \ltrch\fcs0 \b\f2\fs20\insrsid11027494 
\par [END]
\par 
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494 MSCentralTransaction.h - in "enum msg_e"
\par }{\rtlch\fcs1 \ab\af2\afs20 \ltrch\fcs0 \b\f2\fs20\insrsid11027494 [BEGIN]
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494 MSG_READFNFILE,\tab \tab \tab }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf11\insrsid11027494 //Read a file from FN - MiB Feb2008a}{\rtlch\fcs1 \ab\af2\afs20 \ltrch\fcs0 
\b\f2\fs20\insrsid11027494 
\par [END]}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494 
\par }{\rtlch\fcs1 \ab\af2\afs20 \ltrch\fcs0 \b\f2\fs20\insrsid11027494 
\par 
\par }{\rtlch\fcs1 \ab\af2\afs40 \ltrch\fcs0 \b\f2\fs40\insrsid11027494 **MSCentral**
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494 MSCentralTransaction.cpp - }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11027494 void}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494 
 CTransaction_CENTRAL::HandleMsg( msg_t &Msg )
\par }{\rtlch\fcs1 \ab\af2\afs20 \ltrch\fcs0 \b\f2\fs20\insrsid11027494 [BEGIN]
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11027494 case}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494  MSG_READFNFILE:
\par \tab \tab \{
\par \tab \tab \tab }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf11\insrsid11027494 //MiB Feb2008a
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494 \tab \tab \tab fnfileread_t &ReadFile = (fnfileread_t &)Msg;
\par \tab \tab \tab ifstream file( ReadFile.FileName );
\par \tab \tab \tab }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11027494 if}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494 ( file.is_open() )
\par \tab \tab \tab \{
\par \tab \tab \tab \tab file.seekg(0,ios_base::end);
\par \tab \tab \tab \tab }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11027494 long}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494  DataLen = file.tellg();
\par \tab \tab \tab \tab file.seekg( 0 , ios_base::beg );
\par \tab \tab \tab \tab }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11027494 char}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494  *Data = }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11027494 new}{\rtlch\fcs1 \af2\afs20 
\ltrch\fcs0 \f2\fs20\insrsid11027494  }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11027494 char}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494 [DataLen];
\par \tab \tab \tab \tab file.read( Data, DataLen );
\par \tab \tab \tab \tab file.close();
\par 
\par \tab \tab \tab \tab }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11027494 int}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494  MsgLength = (}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11027494 sizeof}{\rtlch\fcs1 
\af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494 (fnfileread_t) - 1 ) + DataLen;
\par \tab \tab \tab \tab }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11027494 char}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494  *Buffer = }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11027494 new}{\rtlch\fcs1 
\af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494  }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11027494 char}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494 [MsgLength];
\par \tab \tab \tab \tab fnfileread_t &ReadOut = *(fnfileread_t *)Buffer;
\par \tab \tab \tab \tab strcpy( ReadOut.EntString, ReadFile.EntString );
\par \tab \tab \tab \tab strcpy( ReadOut.FileName, ReadFile.FileName );
\par \tab \tab \tab \tab ReadOut.Msg = MSG_READFNFILE;
\par \tab \tab \tab \tab ReadOut.Length = MsgLength;
\par \tab \tab \tab \tab ReadOut.DataSize = DataLen;
\par \tab \tab \tab \tab ReadOut.fileExists = 1;
\par \tab \tab \tab \tab memcpy( &ReadOut.Data[0], Data, DataLen );
\par \tab \tab \tab \tab 
\par \tab \tab \tab \tab send( m_Socket, Buffer, MsgLength, 0 );
\par 
\par \tab \tab \tab \tab }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11027494 delete}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494  Buffer;
\par \tab \tab \tab \}
\par \tab \tab \tab }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11027494 else
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494 \tab \tab \tab \{
\par \tab \tab \tab \tab ReadFile.fileExists = 0;
\par \tab \tab \tab \tab send( m_Socket, (}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11027494 const}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494  }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11027494 char}{\rtlch\fcs1 
\af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494  *)&ReadFile, }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11027494 sizeof}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494 ( ReadFile ), 0 );
\par \tab \tab \tab \}
\par 
\par \tab \tab \tab SendDisconnect();
\par 
\par \tab \tab \tab }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\insrsid11027494 break}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid11027494 ;
\par \tab \tab \}
\par }{\rtlch\fcs1 \ab\af2\afs20 \ltrch\fcs0 \b\f2\fs20\insrsid11027494 [END]}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid11027494 
\par }}